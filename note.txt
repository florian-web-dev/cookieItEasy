 update utilisateur set mdp=sha2(mdp,256)

T.Moulin — 19/07/2021
case "traitementInscription": 
    $prenom=filter_var($_POST['prenom'], FILTER_SANITIZE_FULL_SPECIAL_CHARS);
    $nom=filter_var($_POST['nom'], FILTER_SANITIZE_FULL_SPECIAL_CHARS);
    $email=filter_var($_POST['email'], FILTER_SANITIZE_FULL_SPECIAL_CHARS);
    $mdp1=filter_var($_POST['mdp1'], FILTER_SANITIZE_FULL_SPECIAL_CHARS);
    $mdp2=filter_var($_POST['mdp2'], FILTER_SANITIZE_FULL_SPECIAL_CHARS);
    $_SESSION["error"]=array();
    
    if($mdp1!=$mdp2)
    {
        array_push($_SESSION["error"],"Les mdp ne corespondents pas");
        echo"mdp";
      
    }
    if(!filter_var($email,FILTER_VALIDATE_EMAIL))
    {
        array_push($_SESSION["error"],"l'email n'est valide");

    }
   
    //@TODO verification des données de formulaire 
    if(count($_SESSION["error"])>0)
    {
          header("location:./?path=main&action=login");
        die;
    }
   
    $mdp=hash("sha256",$mdp1);

    require('model/bdd.php');
    require('model/managers/utilisateurManager.php');
    $unPDO=etablirCo();
    $utilisateurManager= new UtilisateurManager($unPDO);
    $nouvelleUtilisateur= new Utilisateurs();
    $nouvelleUtilisateur->setNom($nom);
    $nouvelleUtilisateur->setPrenom($prenom);
    $nouvelleUtilisateur->setEmail($email);
    $nouvelleUtilisateur->setMdp($mdp);
    $nouvelleUtilisateur->setRole("client");
    //TODO autres props
    $utilisateurManager->addUtilisateur($nouvelleUtilisateur);
    header("location:./"); // Permet de rediriger après validation du formulaire pour éviter de pouvoir valider plusieurs fois le même.

    
    break;
[11:19]
   public function addUtilisateur($unUtilisateur){

        try {
         
            $connex = $this -> lePDO;
            $sql = $connex -> prepare( "INSERT INTO atelieremerveille.utilisateur (nom, prenom, email, mdp, role) VALUES (:nom, :prenom, :email, :mdp, :role)" );
            $sql -> bindValue( ":nom", $unUtilisateur -> getNom() );
            $sql -> bindValue( ":prenom", $unUtilisateur -> getPrenom() );
            $sql -> bindValue( ":email", $unUtilisateur -> getEmail() );
            $sql ->bindValue(":mdp",$unUtilisateur->getMdp());
            $sql -> bindValue (":role",$unUtilisateur->getRole());
            $sql -> execute();
       

        }

        catch ( PDOException $error ) {
            echo $error -> getMessage();
        
            
        }
    }
[11:19]
    <?php if(isset($_SESSION["error"])){
        if(count($_SESSION['error'])>0)
        {

echo ("<div class='text-danger text-center my-3'>");
foreach($_SESSION["error"] as $msgErreur)
{
    echo "<li>".$msgErreur."<li>";
}
echo ("</div>");
}
} ?>


// function verifCSRF(){
//     if(isset($_SESSION['token'],$_POST['token']) )
//     {
//     return false;
//     }
//     return $_SESSION['token']==$_POST['token'];
    
// }
// verifCSRF();